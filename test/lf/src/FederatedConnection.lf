target uC {
  platform: Native,
  timeout: 1sec
}

reactor Src(id: int = 0) {
  output out: int
  reaction(startup) -> out{=
    printf("Hello from Src!\n");
    lf_set(out, self->id);
  =}
}

reactor Dst {
  input in: int
  state check: bool = false
  reaction(startup) {=
    printf("Hello from Dst!\n");
  =}
  reaction(in) {=
    printf("Received %d from Src\n", in->value);
    validate(in->value == 42);
    self->check = true;
    env->request_shutdown(env);
  =}

  reaction(shutdown) {=
    validate(self->check);
  =}
}

federated reactor {
  r1 = new Src(id=42)
  r2 = new Dst()
  r1.out -> r2.in 
}