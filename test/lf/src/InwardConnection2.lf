target uC {
  platform: Native
}

reactor Inner {
  input in: int
  state check: bool = false

  reaction(in) {=
    validate(in->value == 42);
    self->check = true;
  =}

  reaction(shutdown) {=
    validate(self->check);  
  =}
}

reactor R {
  input in:int

  state check:int = 0
  inner = new Inner()
  
  in -> inner.in
  reaction(in) {=
    validate(lf_is_present(in));
    validate(in->value == 42);
    self->check++;
  =}

  reaction(startup) in {=
    validate(self->check == 1);
    validate(lf_is_present(in));
    validate(in->value == 42);
    self->check++;
  =}

  reaction(shutdown) {=
    validate(self->check == 2);
  =}
}

reactor Src {
  output out: int

  reaction(startup) -> out {=
    lf_set(out, 42);
  =}
}


main reactor {
  src = new Src()
  r = new R()

  src.out -> r.in


}