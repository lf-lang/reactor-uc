// Check that a state variable can have a statically initialized struct as a value.
target uC {
  platform: Native
}

preamble {=
  #include "reactor-uc/reactor-c.h"
=}

preamble {=
  typedef struct hello_t {
    char* name;
    int value;
  } hello_t;
=}

main reactor StructAsState {
  state s: hello_t = {"Earth", 42}  // Notice that target uC {
  platform: Native
}

preamble \{=
  #include "reactor-uc/reactor-c\.h"
\=}ode delimiters are no longer necessary.

  reaction(startup) {=
    printf("State s.name=\"%s\", value=%d.\n", self->s.name, self->s.value);
    if (self->s.value != 42) {
      fprintf(stderr, "FAILED: Expected 42.\n");
      exit(1);
    }
  =}
}
