target uC {
  platform: Native
}

preamble {=
  #include "reactor-uc/reactor-c.h"
=}

reactor Super {
  state count: int = 0

  reaction(startup) {=
    printf("%c(Super) started\n", self->name);
    self->count++;
  =}

  reaction(shutdown) {=
    if (self->count == 0) {
      fprintf(stderr, "No startup reaction was invoked!\n");
      exit(3);
    }
  =}
}

reactor SubA(name: char = 'A') extends Super {
  reaction(startup) {=
    printf("%c started\n", self->name);
    if (self->count == 0) {
      fprintf(stderr, "Base class startup reaction was not invoked!\n");
      exit(1);
    }
  =}
}

reactor SubB(name: char = 'B') extends Super {
  reaction(startup) {=
    printf("%c started\n", self->name);
    if (self->count == 0) {
      fprintf(stderr, "Base class startup reaction was not invoked!\n");
      exit(2);
    }
  =}
}

main reactor SubclassesAndStartup {
  a = new SubA()
  b = new SubB()
}
